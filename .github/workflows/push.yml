name: Workflow Main - On Push

on:
  push:
    branches: [main]

jobs:
  setup:
    name: preparing
    runs-on: ubuntu-latest
    continue-on-error: false
    strategy:
      matrix:
        node-version: [14.16.1]

    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: install packages using yarn.lock
        run: |
          yarn --frozen-lockfile
      - name: Release
        run: |
          yarn release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare publish
        run: |
          git config user.name alanflp
          git config user.email alanflpns@gmail.com
          yarn prepare-publish
      - name: Publish
        continue-on-error: true
        run: |
          echo "//registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN" >> ~/.npmrc
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: Prepare publish docs
        continue-on-error: true
        run: |
          yarn prepare-publish-docs
      - name: Publish docs
        continue-on-error: true
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./example/storybook-static
